basePath: /
definitions:
  domain.SignInUserInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  domain.TodoItemCreate:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  domain.TodoItemUpdate:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  domain.TodoListCreate:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  domain.TodoListUpdate:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  domain.User:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
  v1.errorResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for TODO application
  title: TODO REST API
  version: "1.0"
paths:
  /api/lists:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: create todo list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.TodoListCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create list
      tags:
      - lists
  /api/lists/{listId}:
    delete:
      consumes:
      - application/json
      description: delete list
      operationId: delete-list
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete list
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: get list
      operationId: get-list
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get list
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: update list
      operationId: update-list
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.TodoListUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update list
      tags:
      - lists
  /api/lists/{listId}/items:
    get:
      consumes:
      - application/json
      description: get all items
      operationId: get-all-items
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: create todo item
      operationId: create-item
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.TodoItemCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create item
      tags:
      - items
  /api/lists/{listId}/items/{itemId}:
    delete:
      consumes:
      - application/json
      description: delete item
      operationId: delete-item
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      - description: item id
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete item
      tags:
      - items
    get:
      consumes:
      - application/json
      description: get item by id
      operationId: get-item-by-id
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      - description: item id
        in: path
        name: itemId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get item by id
      tags:
      - items
    put:
      consumes:
      - application/json
      description: update item
      operationId: update-item
      parameters:
      - description: list id
        in: path
        name: listId
        required: true
        type: integer
      - description: item id
        in: path
        name: itemId
        required: true
        type: integer
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.TodoItemUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update item
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: authenticate user
      operationId: authenticate-user
      parameters:
      - description: login password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.SignInUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
